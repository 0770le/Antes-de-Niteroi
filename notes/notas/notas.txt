fazendo:
	ataque do tupinamba melee
	hitbox

BUGS e pendencias


menu se voltar com o C o espaço passa a chamar o menu em jogo

perguntar pro leo da ordem de verificaçao dos stados 

serio-flechas rising em player e tupinamba aparecem invertidas durante 1 frame

medio- acertar o rastro das flechas . o_projectil_tail do jogador
medio-atirando sem muniçao "ou mudar pra nada acontere sem muniçao"

(flecha desviar e atacar tupi) o hitbox tem formula pra scanear possiveis colizoes

fraco-existe uma troca entre evade e jump dust entre objetos e funçoes, mas eh dificil corrigir pq os objetos sao diferentes (seguem ou se afastam do player)
fraco-perna do sprite atirando

//Uteis:

para uma fonte aceitar acentos, mude para 255 o limite em ASKI

player_end_game_state é usado no trigger da sala final

window scale é 2

	show_debug_message("image index = " + string(image_index));	
	show_debug_message("image speed = " + string(image_speed));
	show_debug_message("state = " + string(state));
	show_debug_message("runned_once = " + string(runned_once));
	show_debug_message("top" + string( bbox_top));
	show_debug_message("bottom " + string( bbox_bottom));
	show_debug_message("chao (319) " + string( y));
	show_debug_message("---");

//DESENHAR HITBOX
draw_set_color(c_teal);

draw_line(bbox_left, bbox_top,bbox_right,bbox_top);
draw_line(bbox_left, bbox_bottom,bbox_right,bbox_bottom);
draw_line(bbox_left, bbox_top,bbox_left,bbox_bottom);
draw_line(bbox_right, bbox_top,bbox_right,bbox_bottom);

call_later(1, time_source_units_frames, function () { set_focus(true) });	

passo a passo janelas
1 criar layers na sala
2 criar macros prs layers
3 criar pastasem GUI
4 criar obj controller
5 "copiar" outra controller
inserir cod no creation code da room


